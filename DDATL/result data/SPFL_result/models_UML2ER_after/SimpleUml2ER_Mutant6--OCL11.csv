;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Ncf: Number of failed test cases that cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nus: Number of successful test cases that cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Ncs: Number of successful test cases that cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nus: number of successful test cases that do not cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nc: total number of test cases that cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nu:total number of test cases that do not cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Ns: total number of successful test cases
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nf: total number of failed test cases

OCL11;SrcPackage.allInstances()->forAll(p | TrgERModel.allInstances()->exists(e | p.name = e.name and p.ownedElements->forAll(class | e.entities->exists(entity | entity.name = class.name and class.ownedProperty->forAll(prop | prop.complexType.oclIsUndefined() implies entity.features-> select(f|f.oclIsTypeOf(TrgAttribute)) -> exists(f | f.name = prop.name))))))

Rules;TC1;TC2;TC3;TC4;TC5;TC6;TC7;TC8;TC9;TC10;TC11;TC12;TC13;TC14;TC15;TC16;TC17;TC18;TC19;TC20;TC21;TC22;TC23;TC24;TC25;TC26;TC27;TC28;TC29;TC30;TC31;TC32;TC33;TC34;TC35;TC36;TC37;TC38;TC39;TC40;TC41;TC42;TC43;TC44;TC45;TC46;TC47;TC48;TC49;TC50;TC51;TC52;TC53;TC54;TC55;TC56;TC57;TC58;TC59;TC60;TC61;TC62;TC63;TC64;TC65;TC66;TC67;TC68;TC69;TC70;TC71;TC72;TC73;TC74;TC75;TC76;TC77;TC78;TC79;TC80;TC81;TC82;TC83;TC84;TC85;TC86;TC87;TC88;TC89;TC90;TC91;TC92;TC93;TC94;TC95;TC96;TC97;TC98;TC99;TC100;Ncf;Nuf;Ncs;Nus;Nc;Nu;Ns;Nf;Cohen;Braun-Banquet;Simple Matching;Kulcynski2;Barinel;Arithmetic Mean;Mountford;Zoltar;Ochiai;Phi;Op2;Russel Rao;Baroni-Urbani & Buser;Pierce;Ochiai2;Rogers & Tanimoto;DStar;Tarantula;
WeakReferences;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0.0;100.0;0.0;0.0;0.0;100.0;0.0;100.0;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;
References;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0.0;100.0;0.0;0.0;0.0;100.0;0.0;100.0;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;
Attributes;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0.0;100.0;0.0;0.0;0.0;100.0;0.0;100.0;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;
Class;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0.0;100.0;0.0;0.0;0.0;100.0;0.0;100.0;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;
Package;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0.0;100.0;0.0;0.0;0.0;100.0;0.0;100.0;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;
NamedElement;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0.0;100.0;0.0;0.0;0.0;100.0;0.0;100.0;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;
Property;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0.0;100.0;0.0;0.0;0.0;100.0;0.0;100.0;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;
StrongReferences;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0.0;100.0;0.0;0.0;0.0;100.0;0.0;100.0;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;
;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;Fail;