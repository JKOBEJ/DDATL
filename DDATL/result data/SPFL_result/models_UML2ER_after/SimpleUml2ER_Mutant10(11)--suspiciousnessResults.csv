In the following it is displayed the suspiciousness, according to different coefficients, for those OCL constraints that are not satisfied. 


OCL1;SrcPackage.allInstances()->forAll(p | TrgERModel.allInstances()->exists(e | p.name = e.name))
;Cohen;Braun-Banquet;Simple Matching;Kulcynski2;Barinel;Arithmetic Mean;Mountford;Zoltar;Ochiai;Phi;Op2;Russel Rao;Baroni-Urbani & Buser;Pierce;Ochiai2;Rogers & Tanimoto;DStar;Tarantula
WeakReferences;0.0;0.0;0.29;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.1695906432748538;0.0;0.0
References;0.0;0.0;0.29;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.1695906432748538;0.0;0.0
Attributes;-0.2125748502994012;0.0;0.19;0.0;0.0;-0.4798918553565394;0.0;0.0;0.0;-0.5215655772201576;-0.3333333333333333;0.0;0.0;0.2458448753462604;0.0;0.10497237569060773;0.0;0.0
Class;-0.7001020061203672;0.0;0.0;0.0;0.0;-1.0;0.0;0.0;0.0;-1.0;-0.9666666666666667;0.0;0.0;1.0;0.0;0.0;0.0;0.0
Package;0.0;0.71;0.71;0.855;0.71;0.0;0.06896551724137931;0.71;0.8426149773176359;0.0;70.03333333333333;0.71;0.71;0.0;0.0;0.5503875968992248;173.82758620689654;0.5
NamedElement;0.0;0.71;0.71;0.855;0.71;0.0;0.06896551724137931;0.71;0.8426149773176359;0.0;70.03333333333333;0.71;0.71;0.0;0.0;0.5503875968992248;173.82758620689654;0.5
Property;-0.2125748502994012;0.0;0.19;0.0;0.0;-0.4798918553565394;0.0;0.0;0.0;-0.5215655772201576;-0.3333333333333333;0.0;0.0;0.2458448753462604;0.0;0.10497237569060773;0.0;0.0
StrongReferences;0.0;0.0;0.29;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.1695906432748538;0.0;0.0
EXAM-BC;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125
EXAM-WC;0.625;0.25;0.25;0.25;0.625;0.625;0.25;0.25;0.25;0.625;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25
EXAM-AVG;0.375;0.1875;0.1875;0.1875;0.5625;0.375;0.1875;0.1875;0.1875;0.375;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875

OCL2;SrcPackage.allInstances()->forAll(p | TrgERModel.allInstances()->exists(e | p.name = e.name and p.ownedElements->forAll(class | e.entities->exists(entity | entity.name = class.name))))
;Cohen;Braun-Banquet;Simple Matching;Kulcynski2;Barinel;Arithmetic Mean;Mountford;Zoltar;Ochiai;Phi;Op2;Russel Rao;Baroni-Urbani & Buser;Pierce;Ochiai2;Rogers & Tanimoto;DStar;Tarantula
WeakReferences;0.0;0.0;0.1;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.05263157894736842;0.0;0.0
References;0.0;0.0;0.1;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.05263157894736842;0.0;0.0
Attributes;-0.21951219512195122;0.0;0.0;0.0;0.0;-1.0;0.0;0.0;0.0;-1.0;-0.9090909090909091;0.0;0.0;1.0;0.0;0.0;0.0;0.0
Class;-0.2125748502994012;0.2111111111111111;0.19;0.4331417624521073;0.6551724137931034;-0.4798918553565394;0.012842176410949644;5.083146763542151E-5;0.37190613902597885;-0.5215655772201576;18.09090909090909;0.19;0.19;1.5263157894736843;0.0;0.10497237569060773;4.45679012345679;0.1743119266055046
Package;0.0;0.9;0.9;0.95;0.9;0.0;0.2;0.9;0.9486832980505139;0.0;89.0909090909091;0.9;0.9;0.0;0.0;0.8181818181818182;810.0;0.5
NamedElement;0.0;0.9;0.9;0.95;0.9;0.0;0.2;0.9;0.9486832980505139;0.0;89.0909090909091;0.9;0.9;0.0;0.0;0.8181818181818182;810.0;0.5
Property;-0.21951219512195122;0.0;0.0;0.0;0.0;-1.0;0.0;0.0;0.0;-1.0;-0.9090909090909091;0.0;0.0;1.0;0.0;0.0;0.0;0.0
StrongReferences;0.0;0.0;0.1;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.05263157894736842;0.0;0.0
EXAM-BC;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125
EXAM-WC;0.625;0.25;0.25;0.25;0.625;0.625;0.25;0.25;0.25;0.625;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25
EXAM-AVG;0.375;0.1875;0.1875;0.1875;0.5625;0.375;0.1875;0.1875;0.1875;0.375;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875

OCL3;SrcPackage.allInstances()->forAll(p | TrgERModel.allInstances()->exists(e | p.name = e.name and p.ownedElements->forAll(class | e.entities->exists(entity | entity.name = class.name and class.ownedProperty->forAll(prop | entity.features->exists(f | f.name = prop.name))))))
;Cohen;Braun-Banquet;Simple Matching;Kulcynski2;Barinel;Arithmetic Mean;Mountford;Zoltar;Ochiai;Phi;Op2;Russel Rao;Baroni-Urbani & Buser;Pierce;Ochiai2;Rogers & Tanimoto;DStar;Tarantula
WeakReferences;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0
References;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0
Attributes;0.0;0.1;0.1;0.55;1.0;0.0;0.022222222222222223;0.1;0.31622776601683794;0.0;10.0;0.1;0.1;1.0;0.0;0.05263157894736842;1.1111111111111112;1.0
Class;0.0;0.29;0.29;0.645;1.0;0.0;0.028169014084507043;0.29;0.5385164807134504;0.0;29.0;0.29;0.29;1.0;0.0;0.1695906432748538;11.845070422535212;1.0
Package;0.0;1.0;1.0;1.0;1.0;0.0;1.0;1.0;1.0;0.0;100.0;1.0;1.0;0.0;0.0;1.0;1.0;1.0
NamedElement;0.0;1.0;1.0;1.0;1.0;0.0;1.0;1.0;1.0;0.0;100.0;1.0;1.0;0.0;0.0;1.0;1.0;1.0
Property;0.0;0.1;0.1;0.55;1.0;0.0;0.022222222222222223;0.1;0.31622776601683794;0.0;10.0;0.1;0.1;1.0;0.0;0.05263157894736842;1.1111111111111112;1.0
StrongReferences;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0
EXAM-BC;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.5;0.125
EXAM-WC;1.0;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25;1.0;0.25;0.25;0.25;1.0;1.0;0.25;0.625;0.625
EXAM-AVG;0.5625;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875;0.5625;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.5625;0.375

OCL8;SrcPackage.allInstances()->forAll(p | TrgERModel.allInstances()->exists(e | p.name = e.name and p.ownedElements->forAll(class | e.entities->exists(entity | entity.name = class.name and class.ownedProperty->forAll(prop | (prop.complexType.oclIsUndefined()) implies entity.features-> select(f|f.oclIsTypeOf(TrgAttribute)) -> exists(f | f.name = prop.name))))))
;Cohen;Braun-Banquet;Simple Matching;Kulcynski2;Barinel;Arithmetic Mean;Mountford;Zoltar;Ochiai;Phi;Op2;Russel Rao;Baroni-Urbani & Buser;Pierce;Ochiai2;Rogers & Tanimoto;DStar;Tarantula
WeakReferences;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0
References;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0
Attributes;0.0;0.1;0.1;0.55;1.0;0.0;0.022222222222222223;0.1;0.31622776601683794;0.0;10.0;0.1;0.1;1.0;0.0;0.05263157894736842;1.1111111111111112;1.0
Class;0.0;0.29;0.29;0.645;1.0;0.0;0.028169014084507043;0.29;0.5385164807134504;0.0;29.0;0.29;0.29;1.0;0.0;0.1695906432748538;11.845070422535212;1.0
Package;0.0;1.0;1.0;1.0;1.0;0.0;1.0;1.0;1.0;0.0;100.0;1.0;1.0;0.0;0.0;1.0;1.0;1.0
NamedElement;0.0;1.0;1.0;1.0;1.0;0.0;1.0;1.0;1.0;0.0;100.0;1.0;1.0;0.0;0.0;1.0;1.0;1.0
Property;0.0;0.1;0.1;0.55;1.0;0.0;0.022222222222222223;0.1;0.31622776601683794;0.0;10.0;0.1;0.1;1.0;0.0;0.05263157894736842;1.1111111111111112;1.0
StrongReferences;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0
EXAM-BC;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.5;0.125
EXAM-WC;1.0;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25;1.0;0.25;0.25;0.25;1.0;1.0;0.25;0.625;0.625
EXAM-AVG;0.5625;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875;0.5625;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.5625;0.375

OCL9;SrcPackage.allInstances()->forAll(p | TrgERModel.allInstances()->exists(e | p.name = e.name and p.ownedElements->forAll(class | e.entities->exists(entity | entity.name = class.name and class.ownedProperty->forAll(prop | (not prop.complexType.oclIsUndefined() and not prop.isContainment) implies entity.features-> select(f|f.oclIsTypeOf(TrgWeakReference)) -> exists(f | f.name = prop.name))))))
;Cohen;Braun-Banquet;Simple Matching;Kulcynski2;Barinel;Arithmetic Mean;Mountford;Zoltar;Ochiai;Phi;Op2;Russel Rao;Baroni-Urbani & Buser;Pierce;Ochiai2;Rogers & Tanimoto;DStar;Tarantula
WeakReferences;0.0;0.0;0.1;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.05263157894736842;0.0;0.0
References;0.0;0.0;0.1;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.05263157894736842;0.0;0.0
Attributes;-0.21951219512195122;0.0;0.0;0.0;0.0;-1.0;0.0;0.0;0.0;-1.0;-0.9090909090909091;0.0;0.0;1.0;0.0;0.0;0.0;0.0
Class;-0.2125748502994012;0.2111111111111111;0.19;0.4331417624521073;0.6551724137931034;-0.4798918553565394;0.012842176410949644;5.083146763542151E-5;0.37190613902597885;-0.5215655772201576;18.09090909090909;0.19;0.19;1.5263157894736843;0.0;0.10497237569060773;4.45679012345679;0.1743119266055046
Package;0.0;0.9;0.9;0.95;0.9;0.0;0.2;0.9;0.9486832980505139;0.0;89.0909090909091;0.9;0.9;0.0;0.0;0.8181818181818182;810.0;0.5
NamedElement;0.0;0.9;0.9;0.95;0.9;0.0;0.2;0.9;0.9486832980505139;0.0;89.0909090909091;0.9;0.9;0.0;0.0;0.8181818181818182;810.0;0.5
Property;-0.21951219512195122;0.0;0.0;0.0;0.0;-1.0;0.0;0.0;0.0;-1.0;-0.9090909090909091;0.0;0.0;1.0;0.0;0.0;0.0;0.0
StrongReferences;0.0;0.0;0.1;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.05263157894736842;0.0;0.0
EXAM-BC;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125
EXAM-WC;0.625;0.25;0.25;0.25;0.625;0.625;0.25;0.25;0.25;0.625;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25
EXAM-AVG;0.375;0.1875;0.1875;0.1875;0.5625;0.375;0.1875;0.1875;0.1875;0.375;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875

OCL10;SrcPackage.allInstances()->forAll(p | TrgERModel.allInstances()->exists(e | p.name = e.name and p.ownedElements->forAll(class | e.entities->exists(entity | entity.name = class.name and class.ownedProperty->forAll(prop | (not prop.complexType.oclIsUndefined() and prop.isContainment) implies entity.features-> select(f|f.oclIsTypeOf(TrgStrongReference)) -> exists(f | f.name = prop.name))))))
;Cohen;Braun-Banquet;Simple Matching;Kulcynski2;Barinel;Arithmetic Mean;Mountford;Zoltar;Ochiai;Phi;Op2;Russel Rao;Baroni-Urbani & Buser;Pierce;Ochiai2;Rogers & Tanimoto;DStar;Tarantula
WeakReferences;0.0;0.0;0.1;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.05263157894736842;0.0;0.0
References;0.0;0.0;0.1;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.05263157894736842;0.0;0.0
Attributes;-0.21951219512195122;0.0;0.0;0.0;0.0;-1.0;0.0;0.0;0.0;-1.0;-0.9090909090909091;0.0;0.0;1.0;0.0;0.0;0.0;0.0
Class;-0.2125748502994012;0.2111111111111111;0.19;0.4331417624521073;0.6551724137931034;-0.4798918553565394;0.012842176410949644;5.083146763542151E-5;0.37190613902597885;-0.5215655772201576;18.09090909090909;0.19;0.19;1.5263157894736843;0.0;0.10497237569060773;4.45679012345679;0.1743119266055046
Package;0.0;0.9;0.9;0.95;0.9;0.0;0.2;0.9;0.9486832980505139;0.0;89.0909090909091;0.9;0.9;0.0;0.0;0.8181818181818182;810.0;0.5
NamedElement;0.0;0.9;0.9;0.95;0.9;0.0;0.2;0.9;0.9486832980505139;0.0;89.0909090909091;0.9;0.9;0.0;0.0;0.8181818181818182;810.0;0.5
Property;-0.21951219512195122;0.0;0.0;0.0;0.0;-1.0;0.0;0.0;0.0;-1.0;-0.9090909090909091;0.0;0.0;1.0;0.0;0.0;0.0;0.0
StrongReferences;0.0;0.0;0.1;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.05263157894736842;0.0;0.0
EXAM-BC;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125
EXAM-WC;0.625;0.25;0.25;0.25;0.625;0.625;0.25;0.25;0.25;0.625;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25
EXAM-AVG;0.375;0.1875;0.1875;0.1875;0.5625;0.375;0.1875;0.1875;0.1875;0.375;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875

OCL11;SrcPackage.allInstances()->forAll(p | TrgERModel.allInstances()->exists(e | p.name = e.name and p.ownedElements->forAll(class | e.entities->exists(entity | entity.name = class.name and class.ownedProperty->forAll(prop | prop.complexType.oclIsUndefined() implies entity.features-> select(f|f.oclIsTypeOf(TrgAttribute)) -> exists(f | f.name = prop.name))))))
;Cohen;Braun-Banquet;Simple Matching;Kulcynski2;Barinel;Arithmetic Mean;Mountford;Zoltar;Ochiai;Phi;Op2;Russel Rao;Baroni-Urbani & Buser;Pierce;Ochiai2;Rogers & Tanimoto;DStar;Tarantula
WeakReferences;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0
References;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0
Attributes;0.0;0.1;0.1;0.55;1.0;0.0;0.022222222222222223;0.1;0.31622776601683794;0.0;10.0;0.1;0.1;1.0;0.0;0.05263157894736842;1.1111111111111112;1.0
Class;0.0;0.29;0.29;0.645;1.0;0.0;0.028169014084507043;0.29;0.5385164807134504;0.0;29.0;0.29;0.29;1.0;0.0;0.1695906432748538;11.845070422535212;1.0
Package;0.0;1.0;1.0;1.0;1.0;0.0;1.0;1.0;1.0;0.0;100.0;1.0;1.0;0.0;0.0;1.0;1.0;1.0
NamedElement;0.0;1.0;1.0;1.0;1.0;0.0;1.0;1.0;1.0;0.0;100.0;1.0;1.0;0.0;0.0;1.0;1.0;1.0
Property;0.0;0.1;0.1;0.55;1.0;0.0;0.022222222222222223;0.1;0.31622776601683794;0.0;10.0;0.1;0.1;1.0;0.0;0.05263157894736842;1.1111111111111112;1.0
StrongReferences;0.0;0.0;0.0;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0
EXAM-BC;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.5;0.125
EXAM-WC;1.0;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25;1.0;0.25;0.25;0.25;1.0;1.0;0.25;0.625;0.625
EXAM-AVG;0.5625;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875;0.5625;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.5625;0.375

OCL12;SrcPackage.allInstances()->forAll(p | TrgERModel.allInstances()->exists(e | p.name = e.name and p.ownedElements->forAll(class | e.entities->exists(entity | entity.name = class.name and class.ownedProperty->forAll(prop | prop.complexType.oclIsUndefined() implies entity.features-> exists(f | TrgAttribute.allInstances()-> exists(a | a=f and a.type = if prop.primitiveType.oclIsUndefined() then 'NoType' else prop.primitiveType endif)))))))        
;Cohen;Braun-Banquet;Simple Matching;Kulcynski2;Barinel;Arithmetic Mean;Mountford;Zoltar;Ochiai;Phi;Op2;Russel Rao;Baroni-Urbani & Buser;Pierce;Ochiai2;Rogers & Tanimoto;DStar;Tarantula
WeakReferences;0.0;0.0;0.1;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.05263157894736842;0.0;0.0
References;0.0;0.0;0.1;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.05263157894736842;0.0;0.0
Attributes;-0.21951219512195122;0.0;0.0;0.0;0.0;-1.0;0.0;0.0;0.0;-1.0;-0.9090909090909091;0.0;0.0;1.0;0.0;0.0;0.0;0.0
Class;-0.2125748502994012;0.2111111111111111;0.19;0.4331417624521073;0.6551724137931034;-0.4798918553565394;0.012842176410949644;5.083146763542151E-5;0.37190613902597885;-0.5215655772201576;18.09090909090909;0.19;0.19;1.5263157894736843;0.0;0.10497237569060773;4.45679012345679;0.1743119266055046
Package;0.0;0.9;0.9;0.95;0.9;0.0;0.2;0.9;0.9486832980505139;0.0;89.0909090909091;0.9;0.9;0.0;0.0;0.8181818181818182;810.0;0.5
NamedElement;0.0;0.9;0.9;0.95;0.9;0.0;0.2;0.9;0.9486832980505139;0.0;89.0909090909091;0.9;0.9;0.0;0.0;0.8181818181818182;810.0;0.5
Property;-0.21951219512195122;0.0;0.0;0.0;0.0;-1.0;0.0;0.0;0.0;-1.0;-0.9090909090909091;0.0;0.0;1.0;0.0;0.0;0.0;0.0
StrongReferences;0.0;0.0;0.1;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.05263157894736842;0.0;0.0
EXAM-BC;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125
EXAM-WC;0.625;0.25;0.25;0.25;0.625;0.625;0.25;0.25;0.25;0.625;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25
EXAM-AVG;0.375;0.1875;0.1875;0.1875;0.5625;0.375;0.1875;0.1875;0.1875;0.375;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875


Summary of the quality of the different techniques according to the EXAM metric

BEST CASE;Cohen-BC;Braun-Banquet-BC;Simple Matching-BC;Kulcynski2-BC;Barinel-BC;Arithmetic Mean-BC;Mountford-BC;Zoltar-BC;Ochiai-BC;Phi-BC;Op2-BC;Russel Rao-BC;Baroni-Urbani & Buser-BC;Pierce-BC;Ochiai2-BC;Rogers & Tanimoto-BC;DStar-BC;Tarantula-BC
OCL1;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125
OCL2;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125
OCL3;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.5;0.125
OCL8;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.5;0.125
OCL9;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125
OCL10;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125
OCL11;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.5;0.125
OCL12;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.125;0.5;0.125;0.125;0.125;0.125

WORST CASE;Cohen-WC;Braun-Banquet-WC;Simple Matching-WC;Kulcynski2-WC;Barinel-WC;Arithmetic Mean-WC;Mountford-WC;Zoltar-WC;Ochiai-WC;Phi-WC;Op2-WC;Russel Rao-WC;Baroni-Urbani & Buser-WC;Pierce-WC;Ochiai2-WC;Rogers & Tanimoto-WC;DStar-WC;Tarantula-WC
OCL1;0.625;0.25;0.25;0.25;0.625;0.625;0.25;0.25;0.25;0.625;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25
OCL2;0.625;0.25;0.25;0.25;0.625;0.625;0.25;0.25;0.25;0.625;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25
OCL3;1.0;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25;1.0;0.25;0.25;0.25;1.0;1.0;0.25;0.625;0.625
OCL8;1.0;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25;1.0;0.25;0.25;0.25;1.0;1.0;0.25;0.625;0.625
OCL9;0.625;0.25;0.25;0.25;0.625;0.625;0.25;0.25;0.25;0.625;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25
OCL10;0.625;0.25;0.25;0.25;0.625;0.625;0.25;0.25;0.25;0.625;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25
OCL11;1.0;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25;1.0;0.25;0.25;0.25;1.0;1.0;0.25;0.625;0.625
OCL12;0.625;0.25;0.25;0.25;0.625;0.625;0.25;0.25;0.25;0.625;0.25;0.25;0.25;1.0;1.0;0.25;0.25;0.25

AVG CASE;Cohen-AVG;Braun-Banquet-AVG;Simple Matching-AVG;Kulcynski2-AVG;Barinel-AVG;Arithmetic Mean-AVG;Mountford-AVG;Zoltar-AVG;Ochiai-AVG;Phi-AVG;Op2-AVG;Russel Rao-AVG;Baroni-Urbani & Buser-AVG;Pierce-AVG;Ochiai2-AVG;Rogers & Tanimoto-AVG;DStar-AVG;Tarantula-AVG
OCL1;0.375;0.1875;0.1875;0.1875;0.5625;0.375;0.1875;0.1875;0.1875;0.375;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875
OCL2;0.375;0.1875;0.1875;0.1875;0.5625;0.375;0.1875;0.1875;0.1875;0.375;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875
OCL3;0.5625;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875;0.5625;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.5625;0.375
OCL8;0.5625;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875;0.5625;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.5625;0.375
OCL9;0.375;0.1875;0.1875;0.1875;0.5625;0.375;0.1875;0.1875;0.1875;0.375;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875
OCL10;0.375;0.1875;0.1875;0.1875;0.5625;0.375;0.1875;0.1875;0.1875;0.375;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875
OCL11;0.5625;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875;0.5625;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.5625;0.375
OCL12;0.375;0.1875;0.1875;0.1875;0.5625;0.375;0.1875;0.1875;0.1875;0.375;0.1875;0.1875;0.1875;0.75;0.5625;0.1875;0.1875;0.1875
