;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Ncf: Number of failed test cases that cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nus: Number of successful test cases that cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Ncs: Number of successful test cases that cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nus: number of successful test cases that do not cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nc: total number of test cases that cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nu:total number of test cases that do not cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Ns: total number of successful test cases
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nf: total number of failed test cases

OCL9;SrcPackage.allInstances()->forAll(p | TrgERModel.allInstances()->exists(e | p.name = e.name and p.ownedElements->forAll(class | e.entities->exists(entity | entity.name = class.name and class.ownedProperty->forAll(prop | (not prop.complexType.oclIsUndefined() and not prop.isContainment) implies entity.features-> select(f|f.oclIsTypeOf(TrgWeakReference)) -> exists(f | f.name = prop.name))))))

Rules;TC1;TC2;TC3;TC4;TC5;TC6;TC7;TC8;TC9;TC10;TC11;TC12;TC13;TC14;TC15;TC16;TC17;TC18;TC19;TC20;TC21;TC22;TC23;TC24;TC25;TC26;TC27;TC28;TC29;TC30;TC31;TC32;TC33;TC34;TC35;TC36;TC37;TC38;TC39;TC40;TC41;TC42;TC43;TC44;TC45;TC46;TC47;TC48;TC49;TC50;TC51;TC52;TC53;TC54;TC55;TC56;TC57;TC58;TC59;TC60;TC61;TC62;TC63;TC64;TC65;TC66;TC67;TC68;TC69;TC70;TC71;TC72;TC73;TC74;TC75;TC76;TC77;TC78;TC79;TC80;TC81;TC82;TC83;TC84;TC85;TC86;TC87;TC88;TC89;TC90;TC91;TC92;TC93;TC94;TC95;TC96;TC97;TC98;TC99;TC100;Ncf;Nuf;Ncs;Nus;Nc;Nu;Ns;Nf;Cohen;Braun-Banquet;Simple Matching;Kulcynski2;Barinel;Arithmetic Mean;Mountford;Zoltar;Ochiai;Phi;Op2;Russel Rao;Baroni-Urbani & Buser;Pierce;Ochiai2;Rogers & Tanimoto;DStar;Tarantula;
WeakReferences;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0.0;1.0;0.0;99.0;0.0;100.0;99.0;1.0;0.0;0.0;0.99;0.0;NaN;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.9801980198019802;0.0;0.0;
References;;;;;;;X;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;X;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;X;;;;;;;;;;;;;;;;;;;;;;;;0.0;1.0;3.0;96.0;3.0;97.0;99.0;1.0;-0.015228426395939087;0.0;0.96;0.0;0.0;-0.015384615384615385;0.0;0.0;0.0;-0.01767490804100673;-0.03;0.0;0.0;0.00625;0.0;0.9230769230769231;0.0;0.0;
Attributes;;;;;;;X;;;;X;;;;;;;;;;;;;;;;;;;;;;;;;;X;;;;;;;;;X;;X;;;;;;X;;;;;X;;;;;;;;;;;X;;;;;;;X;;;;;;;;;;;X;;;;;;;;;;;;;0.0;1.0;10.0;89.0;10.0;90.0;99.0;1.0;-0.018518518518518517;0.0;0.89;0.0;0.0;-0.02002002002002002;0.0;0.0;0.0;-0.0335012605086404;-0.1;0.0;0.0;0.009363295880149813;0.0;0.8018018018018018;0.0;0.0;
Class;X;;;;;;X;;;X;X;;X;;;;;X;;X;;;;;X;;;X;;;;;;;;X;X;;;X;X;X;;;;X;;X;X;X;;;;X;;;;;X;;;;;;;;;;;X;;;;;;X;X;;;X;;;;;X;;X;X;;;;X;X;;;;;;;;1.0;0.0;28.0;71.0;29.0;71.0;99.0;1.0;0.04826648538409246;0.034482758620689655;0.72;0.5172413793103449;0.03448275862068961;0.06580166821130677;0.07142857142857142;0.034482758620689655;0.18569533817705186;0.1572579384731271;0.72;0.01;0.2518599917518676;0.0;0.15722311511684034;0.5625;0.03571428571428571;0.7795275590551181;
Package;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;1.0;0.0;99.0;0.0;100.0;0.0;99.0;1.0;0.0;0.01;0.01;0.505;0.010000000000000009;0.0;0.020202020202020204;0.01;0.1;0.0;0.010000000000000009;0.01;0.01;0.0;0.0;0.005025125628140704;0.010101010101010102;0.5;
NamedElement;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;1.0;0.0;99.0;0.0;100.0;0.0;99.0;1.0;0.0;0.01;0.01;0.505;0.010000000000000009;0.0;0.020202020202020204;0.01;0.1;0.0;0.010000000000000009;0.01;0.01;0.0;0.0;0.005025125628140704;0.010101010101010102;0.5;
Property;;;;;;;X;;;;X;;;;;;;;;;;;;;;;;;;;;;;;;;X;;;;;;;;;X;;X;;;;;;X;;;;;X;;;;;;;;;;;X;;;;;;;X;;;;;;;;;;;X;;;;;;;;;;;;;0.0;1.0;10.0;89.0;10.0;90.0;99.0;1.0;-0.018518518518518517;0.0;0.89;0.0;0.0;-0.02002002002002002;0.0;0.0;0.0;-0.0335012605086404;-0.1;0.0;0.0;0.009363295880149813;0.0;0.8018018018018018;0.0;0.0;
StrongReferences;;;;;;;X;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;X;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;X;;;;;;;;;;;;;;;;;;;;;;;;0.0;1.0;3.0;96.0;3.0;97.0;99.0;1.0;-0.015228426395939087;0.0;0.96;0.0;0.0;-0.015384615384615385;0.0;0.0;0.0;-0.01767490804100673;-0.03;0.0;0.0;0.00625;0.0;0.9230769230769231;0.0;0.0;
;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Fail;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;